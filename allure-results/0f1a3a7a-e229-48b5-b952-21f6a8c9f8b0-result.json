{"name": "test_ValidLogin", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_Cases.test_Login.Test_001_Login object at 0x10cfa56d0>\nbrowser_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"3411725b1875eb1c1a06cbdbba80da7f\")>\n\n    @pytest.mark.test\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_ValidLogin(self, browser_setup) -> None:\n        self.driver = browser_setup\n        self.logger.info(\"****** Valid login test has started ******\")\n        self.driver.get(self.BaseURL)\n        self.driver.maximize_window()\n        self.LS = LoginScreen(self.driver)\n        self.LS.enterUsername(self.Username)\n        self.LS.enterPassword(self.Password)\n        self.LS.clickSubmitButton()\n        self.LS.verifySuccessfulLogin()\n        self.logger.info(\"******  Valid login has ended ******\")\n    \n        self.logger.info(\"****** Add to cart test has started ******\")\n        self.HS = HomeScreen(self.driver)\n        self.HS.ConfirmHomePage()\n        self.HS.AddItemtoCart()\n        self.HS.VerifyItemAddedtoCart()\n        self.logger.info(\"****** Add to cart has ended ******\")\n    \n        self.logger.info(\"****** Cart contents check test has started ******\")\n        self.ICS = InCartScreen(self.driver)\n        self.ICS.enterTheCart()\n        self.ICS.checkItemInCart()\n        self.ICS.checkoutButton()\n        self.logger.info(\"****** Cart contents check has ended ******\")\n    \n        self.logger.info(\"****** Checkout info page test has started ******\")\n        self.CIS = CheckoutInfoScreen(self.driver)\n        self.CIS.confirmCheckoutInformation()\n        self.CIS.enterFirstname(self.Firstname)\n        self.CIS.enterLastname(self.Lastname)\n        self.CIS.enterPostalCode(self.PostalCode)\n        self.CIS.clickContinueButton()\n        self.logger.info(\"****** Checkout info page test has ended ******\")\n    \n        self.logger.info(\"****** Checkout Overview page test has started ******\")\n        self.COS = CheckoutOverviewScreen(self.driver)\n        self.COS.confirmCheckoutOverview()\n        self.COS.confirmItemPrices()\n        self.COS.clickFinishbutton()\n        self.logger.info(\"****** Checkout Overview  page test has ended ******\")\n    \n        self.logger.info(\"****** Order placed page test has started ******\")\n        self.OPS = OrderPlacedScreen(self.driver)\n>       self.OPS.completeCheckout()\n\ntest_Cases/test_Login.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nScreens/OrderPlacedScreen.py:35: in completeCheckout\n    cancel = wait.until(EC.element_to_be_clickable((By.XPATH, self.cancelButton_xpath)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"3411725b1875eb1c1a06cbdbba80da7f\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x10d091340>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nvenv/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "attachments": [{"name": "Successful Login", "source": "05f7fed5-d9f4-47c0-ae8e-70dff630ed1b-attachment.png", "type": "image/png"}, {"name": "Logout Menu successfully displayed", "source": "daebb4c3-2685-43ab-8c15-14f4cb0606b1-attachment.png", "type": "image/png"}, {"name": "Item added to cart Successfully", "source": "182a682a-ff3b-440d-9c57-de1b7d601997-attachment.png", "type": "image/png"}, {"name": "Item is located in the cart.", "source": "34c6cbd8-a9e9-499b-85a9-666ef26a7de5-attachment.png", "type": "image/png"}, {"name": "Checkout Information Page", "source": "70285314-00be-40eb-b9fa-57c5c51a6034-attachment.png", "type": "image/png"}, {"name": "Overview Page loaded", "source": "c3ad8a8c-bbb1-4d7b-a3c3-19907e4c6b34-attachment.png", "type": "image/png"}, {"name": "log", "source": "abcb1e25-d3b6-4024-bf5f-3686fbfdadc8-attachment.txt", "type": "text/plain"}], "start": 1658593816204, "stop": 1658593852081, "uuid": "6745dfdd-54d1-4d5b-987c-5b941cd90d72", "historyId": "6165604e32694c7ef021366849845f7c", "testCaseId": "1499e15fa19d85616522f52e278e3370", "fullName": "test_Cases.test_Login.Test_001_Login#test_ValidLogin", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "test"}, {"name": "parentSuite", "value": "test_Cases"}, {"name": "suite", "value": "test_Login"}, {"name": "subSuite", "value": "Test_001_Login"}, {"name": "host", "value": "Umshini-KaBafo.local"}, {"name": "thread", "value": "40926-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Cases.test_Login"}]}