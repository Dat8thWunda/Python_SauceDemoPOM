{"name": "test_ValidLogin", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "self = <test_Cases.test_Login.Test_001_Login object at 0x103504e20>\nbrowser_setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"dffd08e0dd35f7c56dd3c581c666af34\")>\n\n    @pytest.mark.test\n    @allure.severity(allure.severity_level.CRITICAL)\n    def test_ValidLogin(self, browser_setup) -> None:\n        self.driver = browser_setup\n        self.logger.info(\"****** Valid login test has started ******\")\n        self.driver.get(self.BaseURL)\n        self.driver.maximize_window()\n        self.LS = LoginScreen(self.driver)\n        self.LS.enterUsername(self.Username)\n        self.LS.enterPassword(self.Password)\n        self.LS.clickSubmitButton()\n        self.LS.verifySuccessfulLogin()\n        self.logger.info(\"******  Valid login has ended ******\")\n    \n        self.logger.info(\"****** Add to cart test has started ******\")\n        self.HS = HomeScreen(self.driver)\n>       self.HS.ConfirmHomePage()\n\ntest_Cases/test_Login.py:52: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Screens.HomeScreen.HomeScreen object at 0x10359da90>\n\n    def ConfirmHomePage(self):\n    \n        time.sleep(1)\n        openMenu = self.driver.find_element(By.XPATH, self.button_open_menu)\n        openMenu.click()\n    \n        LogoutOption = self.driver.find_element(By.XPATH, self.logout_sidebar_option)\n        if LogoutOption.is_displayed():\n            time.sleep(1)\n            allure.attach(self.driver.get_screenshot_as_png(), name=\"Logout Menu successfully displayed\",\n                          attachment_type=AttachmentType.PNG)\n            print(\"Logout menu successfully loaded\")\n            time.sleep(1)\n            self.driver.find_element(By.XPATH, self.button_close_menu).click()\n            self.driver.quit()\n            assert True\n        else:\n            print(\"Logout menu failed to load\")\n            time.sleep(1)\n            self.driver.find_element(By.XPATH, self.button_close_menu).click()\n>           assert False\nE           AssertionError\n\nScreens/HomeScreen.py:39: AssertionError"}, "attachments": [{"name": "Successful Login", "source": "c453789d-1dc1-4f4e-bc0f-543579f69b68-attachment.png", "type": "image/png"}, {"name": "log", "source": "56aff7bd-f36f-4f0a-82da-b0955348b709-attachment.txt", "type": "text/plain"}], "start": 1658579578391, "stop": 1658579588658, "uuid": "c70e8ba5-4087-49b6-a844-f135ec9ac469", "historyId": "6165604e32694c7ef021366849845f7c", "testCaseId": "1499e15fa19d85616522f52e278e3370", "fullName": "test_Cases.test_Login.Test_001_Login#test_ValidLogin", "labels": [{"name": "severity", "value": "critical"}, {"name": "tag", "value": "test"}, {"name": "parentSuite", "value": "test_Cases"}, {"name": "suite", "value": "test_Login"}, {"name": "subSuite", "value": "Test_001_Login"}, {"name": "host", "value": "Umshini-KaBafo.local"}, {"name": "thread", "value": "35637-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_Cases.test_Login"}]}